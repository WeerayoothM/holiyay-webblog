[{"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Home\\Home.js":"4","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\context\\userContext.js":"5","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\PrivateRoutes\\PrivateRoutes.js":"6","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\roles.js":"7","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\NotFound\\NotFound.js":"8","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\NavBar\\NavBar.js":"9","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Blog\\Blog.js":"10","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Feed\\Feed.js":"11","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Profile\\Profile.js":"12","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Login\\Login.js":"13","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Register\\Register.js":"14","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\services\\LocalStorageService.js":"15","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\axios.js":"16","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\constants.js":"17","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\CreateBlog\\CreateBlog.js":"18","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CreateBlogItem.\\CreateBlogItem.js":"19","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\PostItem\\PostItem.js":"20","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\PostSection\\PostSection.js":"21","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CommentSection\\CommentSection.js":"22","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CreateComment\\CreateComment.js":"23"},{"size":1030,"mtime":1608535173599,"results":"24","hashOfConfig":"25"},{"size":512,"mtime":1608005370581,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":3449,"mtime":1608711457153,"results":"28","hashOfConfig":"25"},{"size":99,"mtime":1608004196184,"results":"29","hashOfConfig":"25"},{"size":800,"mtime":1608006338500,"results":"30","hashOfConfig":"25"},{"size":1296,"mtime":1608372015831,"results":"31","hashOfConfig":"25"},{"size":156,"mtime":1608004784166,"results":"32","hashOfConfig":"25"},{"size":2108,"mtime":1608649780066,"results":"33","hashOfConfig":"25"},{"size":3525,"mtime":1608561007427,"results":"34","hashOfConfig":"25"},{"size":4903,"mtime":1608561087136,"results":"35","hashOfConfig":"25"},{"size":153,"mtime":1608003850655,"results":"36","hashOfConfig":"25"},{"size":2465,"mtime":1608265021856,"results":"37","hashOfConfig":"25"},{"size":7284,"mtime":1608712403132,"results":"38","hashOfConfig":"25"},{"size":673,"mtime":1608357287172,"results":"39","hashOfConfig":"25"},{"size":994,"mtime":1608464290370,"results":"40","hashOfConfig":"25"},{"size":55,"mtime":1607874822464,"results":"41","hashOfConfig":"25"},{"size":3167,"mtime":1608713120316,"results":"42","hashOfConfig":"25"},{"size":3751,"mtime":1608530122439,"results":"43","hashOfConfig":"25"},{"size":2490,"mtime":1608561145777,"results":"44","hashOfConfig":"25"},{"size":3157,"mtime":1608520894529,"results":"45","hashOfConfig":"25"},{"size":5279,"mtime":1608560551678,"results":"46","hashOfConfig":"25"},{"size":1212,"mtime":1608560800387,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2yxj27",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\index.js",[],["103","104"],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Home\\Home.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\context\\userContext.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\PrivateRoutes\\PrivateRoutes.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\roles.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\NotFound\\NotFound.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Blog\\Blog.js",["105"],"import axios from '../../../config/axios';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport './Blog.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport localStorageService from '../../../services/LocalStorageService'\r\nimport PostSection from '../../../components/PostSection/PostSection';\r\nimport CommentSection from '../../../components/CommentSection/CommentSection';\r\nimport CreateComment from '../../../components/CreateComment/CreateComment';\r\nimport { Box } from '@chakra-ui/react';\r\nimport UserContext from '../../../context/userContext';\r\n\r\nfunction Blog() {\r\n    const { postId } = useParams();\r\n    const [postData, setPostData] = useState([]);\r\n    const [authorName, setAuthorName] = useState(null);\r\n    const [authorProfile, setAuthorProfile] = useState(null);\r\n    const [isLike, setIsLike] = useState(null)\r\n    const myProfile = localStorageService.getUserProfile()\r\n    const { role } = useContext(UserContext)\r\n\r\n    const fetchPostData = () => {\r\n        axios.get(`/posts/${postId}`)\r\n            .then(res => {\r\n                setPostData(res.data)\r\n                console.log(res.data.likes.includes(myProfile.id))\r\n                setIsLike(res.data.likes.includes(myProfile.id))\r\n                axios.get(`/users/${res.data.author}`)\r\n                    .then(res => {\r\n                        setAuthorName(res.data.authorName)\r\n                        setAuthorProfile(res.data.authorProfile)\r\n                    }).catch(err => console.log(err))\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchPostData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"blog-container\">\r\n            <PostSection postId={postId} postData={postData} authorName={authorName} authorProfile={authorProfile} fetchPostData={fetchPostData} isLike={isLike} />\r\n            <Box d=\"flex\" alignItems=\"baseline\" style={{ width: '60%', margin: '20px auto' }} >\r\n                <div\r\n                    style={{ color: \"#fbdb48\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}\r\n                >\r\n                    {/* <MinusIcon fontSize=\"4em\" style={{ border: '1px solid white', width: '50px', height: '20px', padding: '0' }} /> */}\r\n                    <div style={{ display: 'flex', justifyContent: 'center', flexGrow: '2', width: '100px', height: '5px', borderTop: '2px solid rgba(233, 229, 246, 0.5)' }}>\r\n\r\n                    </div>\r\n                    <div style={{ display: 'flex', padding: ' 0 5px', justifyContent: 'center', color: 'rgba(233, 229, 246, 0.5)' }} >\r\n                        &nbsp;Comments\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexGrow: '2', width: '100px', height: '5px', borderTop: '2px solid rgba(233, 229, 246, 0.5)' }}>\r\n\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n            {postData?.comments?.map((item, idx) => {\r\n                return (\r\n                    <CommentSection key={idx} idx={idx} item={item} content={item.content} postId={postId} postData={postData} authorName={authorName} authorProfile={authorProfile} fetchPostData={fetchPostData} isLike={isLike} />\r\n                )\r\n            })}\r\n\r\n            { role === \"USER\" && <CreateComment postId={postId} postData={postData} authorName={authorName} authorProfile={authorProfile} fetchPostData={fetchPostData} isLike={isLike} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Feed\\Feed.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Profile\\Profile.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Login\\Login.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\Register\\Register.js",["106"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport './Register.css';\r\nimport axios from '../../../config/axios'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    username: Yup.string().required(),\r\n    firstName: Yup.string().required(),\r\n    lastName: Yup.string().required(),\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required().min(3),\r\n    confirmPassword: Yup.string()\r\n        .required()\r\n        .test('passwords-match', 'Passwords must match', function (value) {\r\n            return this.parent.password === value\r\n        }),\r\n    mobile: Yup.string().required().min(10).max(10),\r\n    description: Yup.string().required(),\r\n    // imageUrl: Yup.string().required(),\r\n});\r\n\r\nfunction Register() {\r\n    const history = useHistory()\r\n\r\n    const { register, handleSubmit, errors, } = useForm(\r\n        {\r\n            resolver: yupResolver(SignupSchema)\r\n        }\r\n    );\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const onSubmit = (data) => {\r\n        axios.post('/users/register', { ...data, imageUrl: imageUrl })\r\n            .then(res => {\r\n                console.log(res);\r\n                history.push('/login');\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    };\r\n\r\n\r\n    const handleFileInputChange = (e) => {\r\n        // const file = e.target.files[0];\r\n        // setSelectedFile(file);\r\n        // e.preventDefault();\r\n        setLoading(true)\r\n        if (!e.target.value) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n\r\n        reader.onloadend = () => {\r\n            uploadImage(reader.result);\r\n        };\r\n        reader.onerror = () => {\r\n            console.error('AHHHHHHHH!!');\r\n\r\n        };\r\n\r\n    };\r\n\r\n    const uploadImage = async (base64EncodedImage) => {\r\n        try {\r\n            const res = await axios.post('/upload', { data: base64EncodedImage })\r\n            setImageUrl(res.data.url)\r\n            setLoading(false)\r\n\r\n        } catch (err) {\r\n            alert(\"File size too large.\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div style={{ padding: '20px 40px', borderRadius: '20px', background: 'rgba(0, 0, 0, 0.5)' }}>\r\n                <h1 style={{\r\n                    color: 'white', fontSize: '2.5rem', marginBottom: '30px', fontWeight: '600',\r\n                    paddingBottom: '10px',\r\n                    borderBottom: '1px solid rgb(79, 98, 148)'\r\n                }}>Registration Form</h1>\r\n                <form onSubmit={handleSubmit(onSubmit)} >\r\n\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"20\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label class=\"custom-file-upload\">\r\n                            Custom Upload\r\n                            <input\r\n                                id=\"fileInput\"\r\n                                type=\"file\"\r\n                                name=\"image\"\r\n                                onChange={handleFileInputChange}\r\n                                // value={fileInputState}\r\n                                className=\"upload-image\"\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                        </label>\r\n                        {errors.username && <p className=\"error-message\">{errors.username.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"20\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" name=\"username\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.username && <p className=\"error-message\">{errors.username.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"20\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" name=\"firstName\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.firstName && <p className=\"error-message\">{errors.firstName.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"40\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" name=\"lastName\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.lastName && <p className=\"error-message\">{errors.lastName.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"40\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.email && <p className=\"error-message\">{errors.email.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"40\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" name=\"password\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.password && <p className=\"error-message\">{errors.password.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"40\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Confirm Password</label>\r\n                        <input type=\"password\" name=\"confirmPassword\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.confirmPassword && <p className=\"error-message\">{errors.confirmPassword.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"60\" data-aos='fade-right' data-aos-offset=\"100\" className=\"formgroup\">\r\n                        <label>Mobile</label>\r\n                        <input type=\"text\" name=\"mobile\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.mobile && <p className=\"error-message\">{errors.mobile.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"80\" data-aos='fade-right' className=\"formgroup\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\" name=\"description\" ref={register} style={{ padding: '0 10px' }} />\r\n                        {errors.description && <p className=\"error-message\">{errors.description.message}</p>}\r\n                    </div>\r\n                    <div data-aos-once=\"true\" data-aos-delay=\"100\" data-aos='fade-right' className=\"formgroup btn-submit\">\r\n                        <input type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\services\\LocalStorageService.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\axios.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\config\\constants.js",[],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\containers\\pages\\CreateBlog\\CreateBlog.js",["107"],"import axios from '../../../config/axios';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport CreateBlogItem from '../../../components/CreateBlogItem./CreateBlogItem';\r\nimport './CreateBlog.css'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction CreateBlog() {\r\n    const [formInput, setFormInput] = useState([]);\r\n    const [titleInput, setTitleInput] = useState(\"\");\r\n    const [category, setCategory] = useState(\"Adventure\");\r\n    const history = useHistory();\r\n\r\n    const addImage = (e) => {\r\n        setFormInput([...formInput, { contentType: e.target.value, content: \"\" }])\r\n    }\r\n    const addText = (e) => {\r\n        setFormInput([...formInput, { contentType: e.target.value, content: \"\" }])\r\n    }\r\n\r\n    const handleSelectCategory = (e) => {\r\n        setCategory(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(titleInput,\r\n            formInput,\r\n        )\r\n        axios.post(\"/posts\", { title: titleInput, content: formInput, category: category })\r\n            .then(res => {\r\n                history.push(`/blog/${res.data.newpost._id}`)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"createblog-container\">\r\n            <h1 style={{ color: 'white', fontSize: '3rem', margin: '0 auto', borderBottom: '1px solid rgba(256,256,256,0.5)', marginBottom: '20px' }} >Create a new Post</h1>\r\n            <div style={{ color: 'white', display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n                <div style={{ width: '45px', borderRight: '1px solid rgba(256,256,256,0.5)', paddingRight: '10px', height: '50px', fontSize: '1.1rem', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>Title</div>\r\n                <input type=\"text\" className=\"title-input\" value={titleInput} onChange={(e) => setTitleInput(e.target.value)} placeholder=\"Title...\" />\r\n            </div>\r\n            {formInput?.map((item, idx) => {\r\n                return (\r\n                    <CreateBlogItem key={idx} item={item} idx={idx} setFormInput={setFormInput} />\r\n                )\r\n            })}\r\n            <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <button value=\"image\" onClick={addImage} style={{ color: 'white', backgroundColor: '#ff3b80', padding: '10px', margin: '10px' }} >Add image</button>\r\n                <button value=\"text\" onClick={addText} style={{ color: 'white', backgroundColor: '#ff3b80', padding: '10px', margin: '10px' }}>Add text</button>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n                <div style={{ width: '50%', display: 'flex', justifyContent: 'flex-end', alignItems: 'center', borderTop: '1px solid rgba(256,256,256,0.5)', marginTop: '20px' }}>\r\n\r\n                    <button type=\"submit\" onClick={onSubmit} style={{ color: 'white', marginTop: '20px' }} >Create</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateBlog\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CreateBlogItem.\\CreateBlogItem.js",["108"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport axios from '../../config/axios';\r\nimport { DeleteIcon } from \"@chakra-ui/icons\"\r\n\r\nfunction CreateBlogItem({ item, idx, setFormInput }) {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setFormInput(prev => {\r\n            const newContent = [...prev];\r\n            newContent[idx].content = e.target.value;\r\n            return newContent\r\n        })\r\n    }\r\n\r\n    const handleFileInputChange = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if (!e.target.value) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n\r\n        reader.onloadend = () => {\r\n            uploadImage(reader.result);\r\n        };\r\n        reader.onerror = () => {\r\n            console.error('AHHHHHHHH!!');\r\n        };\r\n\r\n    };\r\n\r\n    const uploadImage = async (base64EncodedImage) => {\r\n        try {\r\n            const res = await axios.post('/upload', { data: base64EncodedImage })\r\n            setFormInput(prev => {\r\n                const newContent = [...prev];\r\n                newContent[idx].content = res.data.url;\r\n                return newContent\r\n            })\r\n            console.log(res.data.url)\r\n            setLoading(false)\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    };\r\n    const deleteInput=() => {\r\n        setFormInput(prev => {\r\n            let newContent = [...prev];\r\n            newContent.splice(idx,1);\r\n            return newContent\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            ieie\r\n            {(() => {\r\n                switch (item.contentType) {\r\n                    case \"image\":\r\n                        return (\r\n                            <div style={{ display:'flex',justifyContent:'space-between',alignItems:'center' }}>\r\n                                <div onClick={deleteInput} style={{width:'45px',marginRight:'10px', cursor:'pointer',color:'white', borderRight: '1px solid rgba(256,256,256,0.5)', paddingRight: '10px', height: '50px', fontSize: '1.1rem', display: 'flex', justifyContent: 'center', alignItems: 'center' }}><DeleteIcon/></div>\r\n                                <div style={{flexGrow:'1', display:'flex',flexDirection:'column', justifyContent:'space-between',alignItems:'flex-start' }}  >\r\n                                    <input type=\"file\" onChange={handleFileInputChange} style={{ color: 'white', border: 'none', outline: 'none' }} />\r\n                                    { item.content && <img src={item?.content} alt=\"title-image\" />}\r\n                                    {loading && \"\"}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    case \"text\":\r\n                        return (\r\n                            <>\r\n                            <div style={{display:'flex',justifyContent:'space-between',alignItems:'center' }}>\r\n                                <div onClick={deleteInput} style={{width:'45px',marginRight:'10px', cursor:'pointer', color:'white',borderRight: '1px solid rgba(256,256,256,0.5)', paddingRight: '10px', height: '50px', fontSize: '1.1rem', display: 'flex', justifyContent: 'center', alignItems: 'center' }}><DeleteIcon/></div>\r\n                                <textarea value={item?.content} onChange={handleInputChange} style={{ padding: '0 10px', width: '100%', outline: 'none' }} />\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    default:\r\n                        return null\r\n                }\r\n            })()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateBlogItem\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\PostItem\\PostItem.js",["109","110"],"import React, { useState } from 'react'\r\nimport { Flex, Box, Square, GridItem } from \"@chakra-ui/react\"\r\n// import axios from '../../config/axios';\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { faComments, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction PostItem({ postId, author, title, content, likes, comments }) {\r\n    const [imageTitle] = useState((() => {\r\n        const index = content.findIndex(item => item.contentType === \"image\")\r\n        return index === -1 ? null : content[index].content\r\n    })())\r\n    const history = useHistory();\r\n    const [authorName, setAuthorName] = useState(null);\r\n    useEffect(() => {\r\n        axios.get(`/users/${author}`)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                setAuthorName(res.data.authorName)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n    const selectPost = () => {\r\n        history.push(`/blog/${postId}`)\r\n    }\r\n    return (\r\n        <>\r\n            <GridItem rowSpan={2} colSpan={2} bg=\"#234b61\" style={{ border: 'solid 1px rgba(233, 229, 246, 0.08)', width: '449px' }} >\r\n                <Flex style={{ height: '100px' }}>\r\n                    {imageTitle &&\r\n                        <Square w=\"100px\" p=\"5px\">\r\n                            <img src={imageTitle} style={{ objectFit: 'cover', width: '100%', height: '100%' }} />\r\n                        </Square>}\r\n                    <Box flex=\"1\" p='8px' style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\r\n                        <div style={{ fontSize: '1.2rem', cursor: 'pointer', wordBreak: 'break-word' }} onClick={selectPost} >{title}</div>\r\n                        <div style={{ fontSize: '0.8rem', display: 'flex', justifyContent: 'space-between' }}>\r\n                            <div style={{ display: 'flex', flexGrow: '1' }}>Publish by &nbsp;<span style={{ color: '#00a6ff' }}>{authorName} </span></div>\r\n                            <div style={{ marginRight: '10px' }}><FontAwesomeIcon icon={faThumbsUp} />&nbsp;{likes.length}</div>\r\n                            <div><FontAwesomeIcon icon={faComments} />&nbsp;{comments.length}</div>\r\n                        </div>\r\n                    </Box>\r\n                </Flex>\r\n            </GridItem>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\PostSection\\PostSection.js",["111","112"],"import axios from '../../config/axios';\r\nimport React from 'react';\r\nimport './PostSection.css'\r\nimport { faComments, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction PostSection({ postId, postData, authorName, authorProfile, fetchPostData, isLike }) {\r\n\r\n    const handleClickLike = () => {\r\n        axios.patch(`/posts/like/${postId}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                // setIsLike(prev => !prev)\r\n                fetchPostData()\r\n\r\n            }).catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"post-container\">\r\n            <div style={{ margin: '0 auto', lineHeight: '3.5rem', }}>\r\n                <h1 style={{ color: '#e7ac3d', fontSize: '3rem', margin: '0 auto', lineHeight: '3.5rem', }} >{postData.title}</h1>\r\n            </div>\r\n            <div style={{ width: '50%', padding: \"15px 0\", display: 'flex', justifyContent: 'flex-start', alignItems: 'center', borderBottom: '2px solid rgba(256,256,256,0.5)' }} >\r\n                <img src={authorProfile} style={{ width: '40px', height: '40px', borderRadius: '50%' }} alt=\"content-image\" />\r\n                <div style={{ marginLeft: '10px', display: 'flex', flexDirection: 'column', }}>\r\n\r\n                    <span style={{ color: 'white', fontWeight: '500' }}>{authorName}</span>\r\n                    <span style={{ color: 'rgba(256,256,256,0.5)', fontSize: '0.8rem' }}>{new Date(postData.createdAt).toDateString()}</span>\r\n                </div>\r\n            </div>\r\n            {postData?.content?.map((item, idx) => {\r\n                switch (item.contentType) {\r\n                    case \"image\":\r\n                        return (\r\n                            <div key={idx} style={{ width: '100%', display: 'flex', justifyContent: 'center', margin: '20px 0' }} >\r\n                                <img src={item.content} style={{ width: '100%' }} />\r\n                            </div>\r\n                        )\r\n                    case \"text\":\r\n                        return (\r\n                            <div key={idx} style={{ fontSize: '1.1rem', color: 'white', width: '100%', margin: '20px 0', whiteSpace: 'pre-line', wordBreak: 'break-word' }} >{item.content}</div>\r\n                        )\r\n                    default:\r\n                        return null\r\n                }\r\n            })}\r\n            <div style={{ width: '50%', padding: \"15px 0\", display: 'flex', justifyContent: 'flex-start', alignItems: 'center', borderTop: '2px solid rgba(256,256,256,0.5)' }} >\r\n                <div style={{ fontSize: '1.1rem', marginRight: '10px', color: '#fff' }}><FontAwesomeIcon onClick={handleClickLike} icon={faThumbsUp} style={{ fontSize: '1.1rem', color: isLike ? '#00a6ff' : '#fff', cursor: 'pointer' }} />&nbsp;{postData?.likes?.length}</div>\r\n                <div style={{ fontSize: '1.1rem', color: '#fff' }}><FontAwesomeIcon icon={faComments} style={{ fontSize: '1.1rem', color: '#e7ac3d' }} />&nbsp;{postData?.comments?.length}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSection\r\n",["113","114"],"C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CommentSection\\CommentSection.js",["115","116"],"import React, { useState, useEffect } from 'react'\r\nimport './commentSection.css'\r\nimport axios from '../../config/axios';\r\nimport { Button, Col, Dropdown, Input, Menu, Modal, notification, Row } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons'\r\nimport LocalStorageService from '../../services/LocalStorageService';\r\n\r\n\r\n\r\nfunction CommentSection({ idx, postId, postData, content, item, fetchPostData, isLike }) {\r\n    const [authorName, setAuthorName] = useState(null);\r\n    const [authorProfile, setAuthorProfile] = useState(null);\r\n    const [visibleModal, setVisibleModal] = useState(false)\r\n    const [commentInput, setCommentInput] = useState('')\r\n    let manageButton = null;\r\n    const showModal = (e) => {\r\n        e.preventDefault()\r\n        setCommentInput(content)\r\n        setVisibleModal(true)\r\n    };\r\n\r\n    const handleOk = e => {\r\n        console.log(e);\r\n        axios.patch(`comment/${postId}/${item._id}`, { content: commentInput })\r\n            .then(res => {\r\n                fetchPostData()\r\n            })\r\n        setVisibleModal(false)\r\n    };\r\n\r\n    const handleCancel = e => {\r\n        console.log(e);\r\n        setVisibleModal(false)\r\n    };\r\n\r\n    const deleteComment = (e) => {\r\n        e.preventDefault()\r\n        axios.delete(`comment/${postId}/${item._id}`)\r\n            .then(res => {\r\n                notification.success({\r\n                    description: 'delete success'\r\n                })\r\n                fetchPostData()\r\n            }).catch(err => {\r\n                notification.error({\r\n                    description: 'delete fail'\r\n                })\r\n            })\r\n    }\r\n\r\n    const fetchCommentData = () => {\r\n        axios.get(`/users/${item.author}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setAuthorName(res.data.authorName)\r\n                setAuthorProfile(res.data.authorProfile)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCommentData()\r\n    }, [])\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"0\">\r\n                {/* <Link onClick={editComment} style={{ color: \"#1D2129\" }}>\r\n                    แก้ไขคอมเมนต์\r\n                </Link> */}\r\n                <>\r\n                    <Button onClick={showModal} style={{ color: \"#1D2129\", border: 'none', backgroundColor: 'transparent' }}>\r\n                        แก้ไขคอมเมนต์\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"Edit Comment\"\r\n                        visible={visibleModal}\r\n                        onOk={handleOk}\r\n                        onCancel={handleCancel}\r\n                    >\r\n                        {/* onKeyPress={(e) => e.key === \"Enter\" ? handleOk() : null} */}\r\n                        <Input.TextArea autoSize={{ minRows: 5 }} value={commentInput} onChange={(e) => setCommentInput(e.target.value)} />\r\n                    </Modal>\r\n                </>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"1\">\r\n                <Button onClick={deleteComment} style={{ color: \"#1D2129\", border: 'none', backgroundColor: 'transparent' }}>\r\n                    ลบคอมเมนต์\r\n                </Button>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    if (LocalStorageService.getUserProfile().id === item.author) {\r\n        manageButton = (\r\n            <Col span={2} style={{ padding: '15px 15px 15px 5px' }}>\r\n                <Row justify=\"end\">\r\n                    {/* <Link to=\"#\" style={{ color: \"#606770\" }}> */}\r\n                    <Dropdown\r\n                        trigger={[\"click\"]}\r\n                        overlay={menu}\r\n                        placement=\"bottomRight\"\r\n                    >\r\n                        <EllipsisOutlined style={{ color: 'lightgray', fontSize: '1.2rem' }} />\r\n                    </Dropdown>\r\n                    {/* </Link> */}\r\n                </Row>\r\n            </Col>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"comment-container\">\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\r\n                <span style={{ color: 'gray', }} >comment #{idx + 1}</span>\r\n                {manageButton}\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <span style={{ color: 'white', margin: '0 auto', fontSize: '1.3rem' }} >{content}</span>\r\n            </div>\r\n            <div style={{ width: '100%', padding: \"5px 0\", display: 'flex', justifyContent: 'flex-start', alignItems: 'center', borderTop: '1px solid rgba(256,256,256,0.3)' }} >\r\n                <img src={authorProfile} style={{ width: '35px', height: '35px', borderRadius: '50%', objectFit: 'cover' }} alt=\"content-image\" />\r\n                <div style={{ marginLeft: '10px', display: 'flex', flexDirection: 'column', }}>\r\n                    <span style={{ color: 'white', fontWeight: '500', fontSize: '0.8rem' }}>{authorName}</span>\r\n                    <span style={{ color: 'rgba(256,256,256,0.5)', fontSize: '0.7rem' }}>{new Date(postData.createdAt).toDateString()}</span>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CommentSection\r\n","C:\\Users\\Admin\\Desktop\\Full-Stack-Dev\\CodeCamp\\Project\\holidayChill\\client\\src\\components\\CreateComment\\CreateComment.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":38,"column":8,"nodeType":"123","endLine":38,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":36,"column":12,"nodeType":"127","messageId":"128","endLine":36,"endColumn":19},{"ruleId":"125","severity":1,"message":"129","line":21,"column":11,"nodeType":"127","messageId":"128","endLine":21,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":70,"column":55,"nodeType":"132","endLine":70,"endColumn":100},{"ruleId":"121","severity":1,"message":"133","line":24,"column":8,"nodeType":"123","endLine":24,"endColumn":10,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":34,"column":29,"nodeType":"132","endLine":34,"endColumn":115},{"ruleId":"130","severity":1,"message":"131","line":24,"column":17,"nodeType":"132","endLine":24,"endColumn":127},{"ruleId":"135","severity":1,"message":"136","line":36,"column":33,"nodeType":"132","endLine":36,"endColumn":85},{"ruleId":"117","replacedBy":"137"},{"ruleId":"119","replacedBy":"138"},{"ruleId":"121","severity":1,"message":"139","line":62,"column":8,"nodeType":"123","endLine":62,"endColumn":10,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"131","line":121,"column":17,"nodeType":"132","endLine":121,"endColumn":147},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPostData'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'handleSelectCategory' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'author'. Either include it or remove the dependency array.",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["141"],["142"],"React Hook useEffect has a missing dependency: 'fetchCommentData'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchPostData]",{"range":"152","text":"153"},"Update the dependencies array to be: [author]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchCommentData]",{"range":"156","text":"157"},[1655,1657],"[fetchPostData]",[1019,1021],"[author]",[2017,2019],"[fetchCommentData]"]